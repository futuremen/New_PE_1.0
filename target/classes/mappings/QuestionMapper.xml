<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hist.pe.dao.QuestionMapper">


	<select id="getQuestionsByExamPageId" parameterType="Long"
		resultMap="getQuestion">
		select *from question q,question_examPage qe, Type t, ExamPage ex where q.q_id = qe.question_id and q.type_id = t.t_id and qe.examPage_id = ex.ex_id and ex.ex_id = #{examPage_id}
	</select>
	
	
   <resultMap type="Question" id="getQuestion">
   		<id property="id" column="q_id"/>
   		<result property="title" column="title"/>
   		<result property="issue" column="issue"/>
   		<result property="standard_answer" column="standard_answer"/>
   		<result property="score" column="score"/>
   		<association property="qb" javaType="QuestionsBank">
   			<id property="id" column="qb_id"/>
   			<result property="name" column="qb_name"/>
   		</association>
   		<association property="type" javaType="Type">
   			<id property="id" column="t_id"/>
   			<result property="name" column="t_name"/>
   		</association>
   		<association property="degree" javaType="Degree">
   			<id property="d_id" column="d_id"/>
   			<result property="d_degree" column="d_degree"/>
   		</association>
   		<association property="department" javaType="Department" >
   		    <id property="dp_id" column="dp_id"/>
   		    <result property="dp_name" column="dp_name"/>
   		</association>
   		<collection property="examPages" javaType="ExamPage">
   			<id property="id" column="ex_id"/>
   			<result property="name" column="ex_name"/>
   		</collection>
   		
   </resultMap>
	
   <!--需要试题的数量-->
	<select id="getQuestionBy" parameterType="hashmap" resultMap="getQuestion">
        select*from question q ,department d ,degree dg 
        	<where>
        	    <if test="qtype!=null">
        		 q.type_id=#{qtype} and 
        		</if>
        		 q.qb_id=#{subject} and 
        		 q.department_id=#{department_id} and d.dp_id=q.department_id 
        		<if test="degree_id!=null">
        		 and dg.d_id=#{degree_id} and q.degree_id =dg.d_id  
        		</if>
        	</where>
        		
    </select>  
    
	 <!--分页查询  -->
    <select id="getQuestionsByPage" parameterType="PageBean" resultMap="getQuestion">
		select*from question q  where in
			<foreach collection="list" item="questionid"  open="(" close=")" separator="," index="index">
			    #{questionid.id}
			</foreach>
		limit #{top},#{pageSize}       
    </select>
	
    <select id="getQuestionById" resultMap="getQuestion">
		select*from question q where q.q_id in
		<foreach collection="list" item="questionId" open="(" close=")" separator="," index="index">
			#{questionId}		    
		</foreach>        
    </select>
    
    
    <!-- 关联 -->
    <insert id="updateQuestion" parameterType="hashmap">
		insert into question_exampage(question_id,examPage_id) values
		<foreach collection="questios" item="item" index="index" separator=",">
		    (#{item.id},#{examPageId})
		</foreach>
    </insert>
   
    <!--随机查询Question-->
    <select id="randFindQuestion" parameterType="list" resultMap="getQuestion">
         select*from question q ,degree d   where d.d_degree=#{type} and q.degree_id =d.d_id  order by rand() limit #{number}
    </select>
     
     
     <!-- write by zhaoshuo -->
  <select id="findByQuestionBank" parameterType="Integer" resultType="Integer">
  	select count(*) from question q where q.qb_id = #{bankId}
  </select>
    
    <select id="findByQuestionType" parameterType="Integer" resultType="Integer">
    select count(*) from question q where q.type_id = #{typeId}
    </select>
    
    <select id="findByDepartment" parameterType="Integer" resultType="Integer">
    select count(*) from question q where q.department_id = #{departmentId}
    </select>
    
    <!-- 添加单选试题 -->
    <insert id="addSelectOneQuestion" parameterType="SelectQuestion">
    insert into question(q_id, title, issue, standard_answer, qb_id, type_id, degree_id
    , department_id, score) values(null, #{title}, #{issue}, #{standard_answer}, #{qb.id}, #{type.id}, #{degree.d_id}, #{department.dp_id}, #{score} )
    </insert>
    
    <!-- 添加填空题 -->
    <insert id="addFillQuestion" parameterType="FillQuestion">
    insert into question(q_id, title, issue, standard_answer, qb_id, type_id, degree_id
    , department_id, score) values(null, #{title}, null, #{standard_answer}, #{qb.id}, #{type.id}, #{degree.d_id}, #{department.dp_id}, #{score} )
    </insert>
    
    <!-- 添加判断题 -->
    <insert id="addJudgeQuestion" parameterType="JudgeQuestion">
      insert into question(q_id, title, issue, standard_answer, qb_id, type_id, degree_id
    , department_id, score) values(null, #{title}, null, #{standard_answer}, #{qb.id}, #{type.id}, #{degree.d_id}, #{department.dp_id}, #{score} )
    </insert>
    <!-- 查询得到各类型和系别题目的数量 -->
    <select id="getSpecialNum" parameterType="java.util.Map" resultType="Integer">
    select count(*) from question q, degree d where q.type_id = #{typeId} and q.qb_id = #{questionBankId} and q.department_id = #{departmentId} and q.degree_id = d.d_id
    </select>
    
    <!-- 查询得到各类型和系别的题目 -->
    <select id="getSpecialSelectOne" parameterType="java.util.Map" resultMap="question_type">
    select q.q_id, q.title, q.issue, q.standard_answer
    , q.score, d.d_id, d.d_degree from question q, degree d where q.type_id = #{typeId} and q.qb_id = #{questionBankId} and q.department_id = #{departmentId} and q.degree_id = d.d_id limit #{dbIndex}, #{dbNumber}
    </select>

    <resultMap type="Question" id="question_type">
    	<id column="q_id" property="id"/>
    	<result column="title" property="title"/>
    	<result column="issue" property="issue"/>
    	<result column="standard_answer" property="standard_answer"/>
    	<result column="score" property="score"/>
    	<association property="degree" column="degree_id" javaType="Degree">  
            <id property="d_id" column="d_id" javaType="Long" jdbcType="BIGINT"/>  
            <result property="d_degree" column="d_degree" javaType="String" jdbcType="VARCHAR"/>  
        </association>  
    </resultMap>

    
    <!-- 删除制定id的题目 -->
    <delete id="deleteQuestion" parameterType="Integer">
    delete from question where q_id = #{questionId}
    </delete>
    <!-- 更新的时候先查询时候有人引用它 -->
    <select id="findQuestionForeignKey" parameterType="Integer" resultType="Integer">
    select count(*) from question_exampage where question_id = #{questionId}
    </select>
    
    
    <!-- 删除之前首先把外键更新成空的 -->
    <delete id="deleteQuestionForeignKey" parameterType="Integer">
    	delete from question_exampage where question_id = #{questionId}
    </delete>
    
    <!-- 得到制定id的题目 -->
    <select id="getQuestionBySpecil" parameterType="Integer" resultType="Question">
    select q_id AS id, title, issue, standard_answer, score from question  where q_id = #{questionId}
    </select>
    
    <!-- 更新指定的题目 -->
    <update id="updateSpecialQuestion" parameterType="Question">
    update question set title = #{title}, issue = #{issue}, standard_answer = #{standard_answer},score = #{score} where q_id = #{id}
    </update>
</mapper>